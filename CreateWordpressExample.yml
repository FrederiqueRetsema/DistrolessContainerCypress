# CreateWordpressExample
# ======================

AWSTemplateFormatVersion: "2010-09-09"
Description: Create example based on WordPress (complete example including network etc)

Parameters:

  DownloadCommands:
    Description: Commands to get the repository to the EC2
    Type: String
    Default: "git clone https://github.com/FrederiqueRetsema/DistrolessContainerCypress; git checkout wordpress"

  CypressImage:
    Type: String
    Default: "cypress/included:10.4.0"
  BaseDir:
    Type: String
    Default: "/opt/distroless/src"
  RepoDir:
    Type: String
    Default: "/opt/distroless/src/DistrolessContainerCypress"

  EC2InstanceType:
    Description: Instance type for EC2 
    Type: String
    Default: t3.medium
  EC2KeyName:
    Description: Key name for EC2 
    Type: String
    Default: EC2Key
  AmazonLinux2AMI: 
    Description: Amazon Linux AMI
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs
  CreateNewDistrolessContainerStackName:
    Type: String
    Default: CreateNewWordpressContainer
  S3BucketWithCloudFormationTemplates:
    Description: "format bucket-with-cloudformation-templates"
    Type: String
    Default: fra-euwest1
  S3BucketWithTestResults:
    Description: "format bucket-with-test-results"
    Type: String
  S3BucketKeyPrefix:
    Description: "format first-dir/second-dir"
    Type: String

  ScheduleExpression:
    Type: String
    Default: cron(0 0 ? * SUN *)

Resources:

  WordpressNetwork:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketWithCloudFormationTemplates}.s3.amazonaws.com/DistrolessCloudFormationNetworkVPC.yml"

  WordpressDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketWithCloudFormationTemplates}.s3.amazonaws.com/DistrolessCloudFormationDatabase.yml"
      Parameters:
        WordPressVpcId: !GetAtt  WordpressNetwork.Outputs.WordPressVpcId
        SubnetAZaId: !GetAtt WordpressNetwork.Outputs.SubnetAZa
        SubnetAZbId: !GetAtt WordpressNetwork.Outputs.SubnetAZb

  WordpressEFS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketWithCloudFormationTemplates}.s3.amazonaws.com/DistrolessCloudFormationEFS.yml"
      Parameters:
        WordPressVpcId: !GetAtt  WordpressNetwork.Outputs.WordPressVpcId
        SubnetAZaId: !GetAtt WordpressNetwork.Outputs.SubnetAZa
        SubnetAZbId: !GetAtt WordpressNetwork.Outputs.SubnetAZb
        EC2InstanceType: !Ref EC2InstanceType        
        EC2KeyName: !Ref EC2KeyName
        AmazonLinux2AMI: !Ref AmazonLinux2AMI

  WordpressECR:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketWithCloudFormationTemplates}.s3.amazonaws.com/DistrolessCloudFormationECR.yml"

  CreateScheduledCreation:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketWithCloudFormationTemplates}.s3.amazonaws.com/CreateScheduledCreation.yml"
      Parameters:
        DownloadCommands: 'git clone https://github.com/FrederiqueRetsema/DistrolessContainerCypress; git checkout wordpress'
        VpcId: !GetAtt  WordpressNetwork.Outputs.WordPressVpcId
        SubnetId: !GetAtt WordpressNetwork.Outputs.SubnetAZa
        ContainerName: 'wordpress-distroless'
        ContainerTag: '0.1'
        ECRRepository: !GetAtt WordpressECR.Outputs.RepositoryUri
        S3BucketWithTestResults: !Ref S3BucketWithTestResults
        S3BucketKeyPrefix: !Ref S3BucketKeyPrefix 
        S3BucketWithCloudFormationTemplates: !Ref S3BucketWithCloudFormationTemplates
        CypressImage: !Ref CypressImage
        EC2KeyName: !Ref EC2KeyName
        EC2InstanceType: !Ref EC2InstanceType        
        AmazonLinux2AMI: !Ref AmazonLinux2AMI
        ScheduleExpression: !Ref ScheduleExpression
