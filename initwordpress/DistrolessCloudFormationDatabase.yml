# CloudFormationDatabase
# ----------------------

AWSTemplateFormatVersion: "2010-09-09"
Description: Create an Aurora serverless Database (MySQL)

Parameters:

  AutoPauseEnabled:
    Description: Allow or disallow automatic pause when the database isn't used
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  SecondsUntilAutoPause:
    Description: The time, in seconds, before an Aurora DB Cluster in serverless mode is auto paused (300-86400). For production, you might want to have a value > 300 or disable AutoPause
    Type: Number
    Default: 300
  DeletionProtection:
    Description: Protect deletion of the database
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  EnableHttpEndpoint: 
    Description: Enable HTTP endpoint to make it possible to use the query editor in the RDS console 
    Type: String
    AllowedValues:
      - true
      - false
    Default: true

  WordPressVpcId:
    Type: String

  SubnetAZaId:
    Type: String
  SubnetAZbId:
    Type: String

  DatabaseClusterIdentifier: 
    Description: Database cluster identifier
    Type: String
    Default: WordpressDistrolessExampleDatabase
  DatabaseName: 
    Description: DatabaseName
    Type: String
    Default: wordpress
  TablePrefix:
    Description: Table prefix
    Type: String
    Default: wp_

  AdminUserName: 
    Description: User name for the Admin user
    Type: String
    Default: database_admin
  AdminPassword: 
    Description: Password for the Admin user
    Type: String
    Default: "C1nder3llaInW0rdpre$$!"
    NoEcho: true

Resources:

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DatabaseSecurityGroup
      GroupDescription: Write Securitygroup for the database
      VpcId: !Ref WordPressVpcId

  DatabaseSecurityGroupIngressReadOnly:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DatabaseSecurityGroup
      Description: Database access
      CidrIp: 10.0.0.0/16
      FromPort: 3306
      ToPort: 3306
      IpProtocol: TCP

  WordPressDatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: WordPress Subnet Group
      DBSubnetGroupName: wordpresssubnetgroup
      SubnetIds:
        - !Ref SubnetAZaId
        - !Ref SubnetAZbId

  WordPressDatabaseClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: WordPress Parameter Group - add auditing
      Family: aurora-mysql5.7
      Parameters:
        server_audit_events: CONNECT,QUERY,QUERY_DCL,QUERY_DDL,QUERY_DML,TABLE
        server_audit_logging: 1
        server_audit_logs_upload: 1

  WordPressDatabaseCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      DatabaseName: !Ref DatabaseName
      DBClusterIdentifier: !Ref DatabaseClusterIdentifier
      DBClusterParameterGroupName: !Ref WordPressDatabaseClusterParameterGroup
      DBSubnetGroupName: !Ref WordPressDatabaseSubnetGroup
      DeletionProtection: !Ref DeletionProtection
      EnableHttpEndpoint: !Ref EnableHttpEndpoint
      Engine: aurora-mysql
      EngineMode: serverless
      MasterUsername: !Ref AdminUserName
      MasterUserPassword: !Ref AdminPassword
      ScalingConfiguration:
        AutoPause: !Ref AutoPauseEnabled
        MinCapacity: 1
        MaxCapacity: 64
        SecondsUntilAutoPause: !Ref SecondsUntilAutoPause  
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup

Outputs:
  WordPressDBServerEndpoint:
    Value: !GetAtt ["WordPressDatabaseCluster", "Endpoint.Address"]
  WordPressDBClusterArn:
    Value: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${WordPressDatabaseCluster}"
